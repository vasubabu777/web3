
use File::Spec;

my $installOptionComment = << 'EOCOMMENT';
This flag is used to install packages
EOCOMMENT

my $stopOptionComment = << 'EOCOMMENT';
This flag is used to stop the processes
EOCOMMENT

my $startOptionComment = << 'EOCOMMENT';
This flag is used to start the processes
EOCOMMENT

my $remoteInstallOptionComment = << 'EOCOMMENT';
This flag is used to remoteInstall
EOCOMMENT

my $remoteInstallOptionComment = << 'EOCOMMENT';
This flag is used to remoteInstall
EOCOMMENT

my $backupOptionComment = << 'EOCOMMENT';
This flag is used to back up the
installed directory
EOCOMMENT

my $cwd = File::Spec->rel2abs ( File::Spec->curdir());


$VAR1 =
  {
   # config keys

   'baseBuildDir' => '/u/build/build3/aas',
   'buildName' => 'aas_2009_1_ILG',
#   'forceNewBuildDir' => 1,
#   'doNotCreateSyncFlagDir' => 1,
   'mailArray' => [ qw ( ylustig )], 
   'logDir' => '/u/build/build1/buildOp/aas/aas_2009_1_ILG/testlabs/logDir',
   'fullBuildPath' => '/u/build/build3/aas/aas_2009_1_ILG/lnx8-build/latest',
   'syncFlagBaseDir' => '/u/build/build1/buildOp/aas/aas_2009_1_ILG/syncDir',

   'createMultipleArray' =>
   [
    {
     'createDir' => 'buildOp/aas/aas_2009_1_ILG/testlabs',
     'createCmd' => 'BUILD_NUMBER=latest cap -f capfile.ILG mmr3_be',
     'createEnvHash' => $envHash
    },
    {
     'createDir' => 'buildOp/aas/aas_2009_1_ILG/testlabs',
     'createCmd' => 'BUILD_NUMBER=latest cap -f capfile.ILG aas1_be',
     'createEnvHash' => $envHash
    },
   ],



   # install keys

   'installClass' => 'Package::Format::Tar',
   'installFullBaseInstDirArrayPath' => 'build/log/enterprise/FullBaseInstallDirArray.aas',
   'installBackupDir' => '/app/Backups',
 #   'noBackup' => 1,



   # remote install keys
   'remoteInstallArray' =>
   [
	{
	 'host' => 'aas1-be',
	 'baseDir' => '/remoteInstall/aas_2009_1_ILG',
	 'fullBaseInstallDirArrayPath' =>
	 'buildOp/aas/aas_2009_1_ILG/aas1-be/FullBaseInstallDirArray',
	 'user' => 'pin',
	 'remoteInstallSshPort' => 22,
	 'startCmdArray' =>
	 [
	  {
	   'suffix' => 'avs',
	   'relPath' => '/app/vrsn/qm/start_qm',
	   'cmd' => 'start_qm -n AAS',
	   'execDir' => '/app/vrsn/qm',
	   'cmdBaseDirType' => 'absolute',
	   'startSleepPeriod' => 10
	  },
	 ],
	 'stopCmdArray' =>
	 [
	  {
	   'suffix' => 'avs',
	   'relPath' => '/app/vrsn/qm/stop_qm',
	   'cmd' => 'stop -n AAS',
	   'execDir' => '/app/vrsn/qm',
	   'cmdBaseDirType' => 'absolute',
	   'startSleepPeriod' => 10
	  },
	 ],
   	 # Backup keys
   	 'backupMoveSrcDir' => '/app/vrsn/aas',
  	 'backupMoveDestDir' => '/app/vrsn/Backups',
   	 'backupMoveMaxHistLen' => 15,
   	 'backupMoveNoRemove' => 0,
	 'opArray' => [ qw ( Stop Backup Install Start ) ],
	},
   ],
   'remoteInstallScpPath' => '/usr/local/bin/scp',
   'remoteInstallPkgClass' => 'Package::Format::Tar',
   'remoteInstallSshPath' => '/usr/local/bin/ssh',
   'remoteInstallBuildOpCmd' => '/u/build/build1/engtools/perl/bin/buildOp.pl -nr -ns',
   'remoteInstallEmptyBeforeTransfer' => 0,
   'remoteInstallRemoveAfterTransfer' => 0,

   # operation manager keys

   'opHash' =>
   {
	'Install' =>
	{
	 'option' => '-i',
	 'optionComment' => $installOptionComment,
	 'optionConstraint' => '',
	 'package' => 'Build::Install::Base',
	 'method' => 'install',
	 'mailArray' => [ qw (  )],
	 'completionFlagName' => 'INSTALLDONE'
	},
	'Stop' =>
	{
	 'option' => '-sp',
	 'optionComment' => $stopOptionComment,
	 'optionConstraint' => '',
	 'package' => 'Build::Stop::Command',
	 'method' => 'stop',
	 'mailArray' => [ qw (  )]
	},
	'Start' =>
	{
	 'option' => '-sc',
	 'optionComment' => $startOptionComment,
	 'optionConstraint' => '',
	 'package' => 'Build::Start::Command',
	 'method' => 'start',
	 'mailArray' => [ qw (  )]
	},
	'RemoteInstall' =>
	{
	 'option' => '-ri',
	 'optionComment' => $remoteInstallOptionComment,
	 'optionConstraint' => '',
	 'package' => 'Build::Install::Remote',
	 'method' => 'remoteInstall',
	 'mailArray' => [ qw(  )],
	 'completionFlagName' => 'REMOTEINSTALLDONE'
	},
        'CreateMultiple' =>
        {
         'option' => '-cm',
         'optionComment' => $createMultipleOptionComment,
         'optionConstraint' => '',
         'package' => 'Build::Create::Multiple',
         'method' => 'createMultiple',
         'mailArray' => [ qw (  )]
        },
	'Backup' =>
	{
	 'option' => '-bk',
	 'optionComment' => $backupComment,
	 'optionConstraint' => '',
	 'package' => 'Build::Backup::Move',
	 'method' => 'backupMove',
	 'mailArray' => [ qw(  )],
	}

   },
    'opArray' => [qw ( CreateMultiple )]
  };

